DOUBLY LINKED LIST 
package DataStructure;

	class Node {
	    int data;
	    Node next, prev;
	    Node(int data) {
	        this.data = data;
	    }
	}
	class DoublyLinkedList {
	    Node head;
	    void insert(int data) {
	        Node newNode = new Node(data);
	        if (head == null) {
	            head = newNode;
	            return;
	        }
	        Node temp = head;
	        while (temp.next != null) {
	            temp = temp.next;
	        }
	        temp.next = newNode;
	        newNode.prev = temp;
	    }
	    DoublyLinkedList cloneList() {
	        DoublyLinkedList clone = new DoublyLinkedList();
	        Node temp = head;
	        while (temp != null) {
	            clone.insert(temp.data);
	            temp = temp.next;
	        }
	        return clone;
	    }
	    void display() {
	        Node temp = head;
	        while (temp != null) {
	            System.out.print(temp.data + " <-> ");
	            temp = temp.next;
	        }
	        System.out.println("null");
	    }
	    public static void main(String[] args) {
	        DoublyLinkedList list = new DoublyLinkedList();
	        list.insert(10);
	        list.insert(20);
	        list.insert(30);
	        System.out.println("Original List:");
	        list.display();
	        DoublyLinkedList clonedList = list.cloneList();
	        System.out.println("Cloned List:");
	        clonedList.display();
	    }
	}

MAKE A CLONE
package DataStructure;
public class DoublyLinkedList {
    static class Node {
        int data;
        Node next, prev;
        Node(int data) {
            this.data = data;
            this.next = null;
            this.prev = null;
        }
    }
    Node head;
    void push(int data) {
        Node newNode = new Node(data);
        newNode.next = head;
        if (head != null) {
            head.prev = newNode;
        }
        head = newNode;
    }
    DoublyLinkedList clone() {
        DoublyLinkedList cloneList = new DoublyLinkedList();
        Node current = head;
        while (current != null) {
            cloneList.push(current.data);
            current = current.next;
        }
        return cloneList;
    }    
    void printList() {
        Node temp = head;
        while (temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }
    public static void main(String[] args) {
        DoublyLinkedList original = new DoublyLinkedList();
        original.push(4);
        original.push(3);
        original.push(2);
        original.push(1);
        System.out.println("Original Doubly Linked List:");
        original.printList();
        DoublyLinkedList clonedList = original.clone();
        System.out.println("Cloned Doubly Linked List:");
        clonedList.printList();
    }
}
